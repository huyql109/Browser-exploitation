diff -u -r v8/src/compiler/simplified-lowering.cc v8-vuln/src/compiler/simplified-lowering.cc
--- v8/src/compiler/simplified-lowering.cc	2022-02-17 11:29:57.187602487 +0000
+++ v8-vuln/src/compiler/simplified-lowering.cc	2022-02-17 11:35:53.546896340 +0000
@@ -1764,8 +1764,7 @@
             // TODO(neis): Move this into TypedOptimization?
             new_flags |= CheckBoundsFlag::kAbortOnOutOfBounds;
           }
-          ChangeOp(node,
-                   simplified()->CheckedUint32Bounds(feedback, new_flags));
+          DeferReplacement(node, node->InputAt(0));
         }
       } else if (p.flags() & CheckBoundsFlag::kConvertStringAndMinusZero) {
         VisitBinop<T>(node, UseInfo::CheckedTaggedAsArrayIndex(feedback),
diff -u -r v8/src/compiler/typer.cc v8-vuln/src/compiler/typer.cc
--- v8/src/compiler/typer.cc	2022-02-17 11:29:57.187602487 +0000
+++ v8-vuln/src/compiler/typer.cc	2022-02-17 11:36:53.353446655 +0000
@@ -1546,6 +1546,7 @@
     // Unary math functions.
     case Builtin::kMathAbs:
     case Builtin::kMathExp:
+    case Builtin::kMathExpm1:
       return Type::Union(Type::PlainNumber(), Type::NaN(), t->zone());
     case Builtin::kMathAcos:
     case Builtin::kMathAcosh:
@@ -1555,7 +1556,6 @@
     case Builtin::kMathAtanh:
     case Builtin::kMathCbrt:
     case Builtin::kMathCos:
-    case Builtin::kMathExpm1:
     case Builtin::kMathFround:
     case Builtin::kMathLog:
     case Builtin::kMathLog1p:
